{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nconst ACTIONS = {\n  SELECT_FOLDER: \"select folder\",\n  UPDATE_FOLDER: \"update_folder\"\n};\nconst ROOT_FOLDER = {\n  name: 'Root',\n  id: null,\n  path: []\n};\n\nfunction reducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ACTIONS.SELECT_FOLDER:\n      return {\n        folderId: payload.folderId,\n        folder: payload.folder,\n        childFiles: [],\n        childFolders: []\n      };\n\n    case ACTIONS.UPDATE_FOLDER:\n      return { ...state,\n        folder: payload.folder\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function useFolder(folderId = null, folder = null) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    folderId,\n    folder,\n    childFolders: [],\n    childFiles: []\n  });\n  useEffect(() => {\n    dispatch({\n      type: ACTIONS.SELECT_FOLDER,\n      payload: {\n        folderId,\n        folder\n      }\n    });\n  }, [folderId, folder]);\n  useEffect(() => {\n    if (folderId == null) {\n      return dispatch({\n        type: ACTIONS.UPDATE.FOLDER,\n        payload: {\n          folder: ROOT_FOLDER\n        }\n      });\n    }\n  }, [folderId]);\n  return state;\n}\n\n_s(useFolder, \"XpuhcjGOP+UMPnEMQc6FaTSJtWw=\");","map":{"version":3,"sources":["/home/onewithclouds/react/firebase-react-auth/src/hooks/useFolder.js"],"names":["React","useEffect","useReducer","ACTIONS","SELECT_FOLDER","UPDATE_FOLDER","ROOT_FOLDER","name","id","path","reducer","state","type","payload","folderId","folder","childFiles","childFolders","useFolder","dispatch","UPDATE","FOLDER"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA4C,OAA5C;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,aAAa,EAAE,eADH;AAEZC,EAAAA,aAAa,EAAE;AAFH,CAAhB;AAKA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,EAAE,EAAE,IAApB;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CAApB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,EAA2C;AACvC,UAAQD,IAAR;AACI,SAAKT,OAAO,CAACC,aAAb;AACI,aAAO;AACHU,QAAAA,QAAQ,EAAED,OAAO,CAACC,QADf;AAEHC,QAAAA,MAAM,EAAEF,OAAO,CAACE,MAFb;AAGHC,QAAAA,UAAU,EAAE,EAHT;AAIHC,QAAAA,YAAY,EAAE;AAJX,OAAP;;AAMJ,SAAKd,OAAO,CAACE,aAAb;AACI,aAAO,EACH,GAAGM,KADA;AAEHI,QAAAA,MAAM,EAAEF,OAAO,CAACE;AAFb,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAdR;AAiBH;;AAGD,OAAO,SAASO,SAAT,CAAoBJ,QAAQ,GAAG,IAA/B,EAAqCC,MAAM,GAAG,IAA9C,EAAqD;AAAA;;AAExD,QAAM,CAAEJ,KAAF,EAASQ,QAAT,IAAsBjB,UAAU,CAAEQ,OAAF,EAClC;AACAI,IAAAA,QADA;AAEAC,IAAAA,MAFA;AAGAE,IAAAA,YAAY,EAAE,EAHd;AAIAD,IAAAA,UAAU,EAAE;AAJZ,GADkC,CAAtC;AASJf,EAAAA,SAAS,CAAE,MAAM;AACbkB,IAAAA,QAAQ,CACJ;AACIP,MAAAA,IAAI,EAAET,OAAO,CAACC,aADlB;AAEIS,MAAAA,OAAO,EAAE;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ;AAFb,KADI,CAAR;AAKH,GANQ,EAMN,CAACD,QAAD,EAAWC,MAAX,CANM,CAAT;AAQAd,EAAAA,SAAS,CAAE,MAAM;AACb,QAAKa,QAAQ,IAAI,IAAjB,EAAwB;AACpB,aAAOK,QAAQ,CAAC;AACZP,QAAAA,IAAI,EAAET,OAAO,CAACiB,MAAR,CAAeC,MADT;AAEZR,QAAAA,OAAO,EAAE;AAAEE,UAAAA,MAAM,EAAET;AAAV;AAFG,OAAD,CAAf;AAIH;AAEJ,GARQ,EAQN,CAACQ,QAAD,CARM,CAAT;AAUA,SAAOH,KAAP;AAEC;;GA/BeO,S","sourcesContent":["import React, { useEffect, useReducer} from 'react'\n\nconst ACTIONS = {\n    SELECT_FOLDER: \"select folder\",\n    UPDATE_FOLDER: \"update_folder\"\n}\n\nconst ROOT_FOLDER = { name: 'Root', id: null, path: [] }\n\nfunction reducer(state, { type, payload }) {\n    switch (type) {\n        case ACTIONS.SELECT_FOLDER:\n            return {\n                folderId: payload.folderId,\n                folder: payload.folder,\n                childFiles: [],\n                childFolders: [],\n            }\n        case ACTIONS.UPDATE_FOLDER:\n            return {\n                ...state,\n                folder: payload.folder\n            }\n        default:\n            return state\n    }\n\n}\n\n\nexport function useFolder( folderId = null, folder = null ) {\n\n    const [ state, dispatch ] = useReducer( reducer, \n        {\n        folderId,\n        folder,\n        childFolders: [],\n        childFiles: []\n        }\n    )\n\nuseEffect( () => {\n    dispatch( \n        {\n            type: ACTIONS.SELECT_FOLDER,\n            payload: { folderId, folder }\n        })\n}, [folderId, folder])\n\nuseEffect( () => {\n    if ( folderId == null ) {\n        return dispatch({\n            type: ACTIONS.UPDATE.FOLDER,\n            payload: { folder: ROOT_FOLDER }\n        })\n    }\n\n}, [folderId])\n\nreturn state\n\n}\n\n    \n\n"]},"metadata":{},"sourceType":"module"}