{"ast":null,"code":"var _jsxFileName = \"/home/onewithclouds/react/firebase-react-auth/src/components/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const history = useHistory();\n  const {\n    currentUser,\n    updateEmail,\n    updatePassword\n  } = useAuth();\n  const [error, setError] = useState(''); //loading state controls the 'Sign Up' button and prevent adding mulitiple users to the database with muiltiple clicks on the button   \n\n  const [loading, setLoading] = useState(false);\n\n  function unlisten(address) {\n    history.push(address);\n  }\n\n  useEffect(() => {\n    return unlisten;\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    }\n\n    const promises = [];\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value !== currentUser.password) {\n      promises.push(updateupdate(emailRef.current.value));\n    }\n\n    try {\n      //clears up the current error message state to possibly catch a new error in a catch-block below\n      setError('');\n      setLoading(true); // await signup(emailRef.current.value, passwordRef.current.value)\n      // unlisten('/')\n      //           history.push(\"/\")\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: `Failed: ${error}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true,\n              defaultValue: currentUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password-confirm\",\n              ref: passwordConfirmRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateProfile, \"ZRxCSN715/+BBMz0wst+LboOPuI=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/home/onewithclouds/react/firebase-react-auth/src/components/UpdateProfile.js"],"names":["React","useRef","useState","useEffect","Form","Button","Card","Alert","useAuth","Link","useHistory","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","history","currentUser","updateEmail","updatePassword","error","setError","loading","setLoading","unlisten","address","push","handleSubmit","e","preventDefault","current","value","promises","email","password","updateupdate","console","log","message"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function UpdateProfile() {\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const history = useHistory()\n\n    const { currentUser, updateEmail, updatePassword } = useAuth()\n    \n    const [error, setError] = useState('')\n\n    //loading state controls the 'Sign Up' button and prevent adding mulitiple users to the database with muiltiple clicks on the button   \n    const [loading, setLoading] = useState(false)\n\n    function unlisten (address) {\n        history.push(address)\n}\n\n    useEffect( () => {\n        return unlisten\n    }, [])\n    \n\n    async function handleSubmit(e) {\n\n        e.preventDefault()\n\n        if (passwordRef.current.value !==\n            passwordConfirmRef.current.value) {\n                return setError('Passwords do not match')\n            }\n\n        const promises = []\n\n        if (emailRef.current.value !== currentUser.email) {\n            promises.push(updateEmail(emailRef.current.value))\n        }\n\n        if (passwordRef.current.value !== currentUser.password) {\n            promises.push(updateupdate(emailRef.current.value))\n        }\n\n        try {\n            //clears up the current error message state to possibly catch a new error in a catch-block below\n            setError('')\n            setLoading(true)\n                // await signup(emailRef.current.value, passwordRef.current.value)\n                // unlisten('/')\n //           history.push(\"/\")\n        } catch (error) {\n            console.log(error)\n            setError(error.message)\n        }\n\n        setLoading(false)\n    }\n\n    return (\n     <>\n       <Card>\n           <Card.Body>\n               <h2 className=\"text-center mb-4\">Update Profile</h2>\n               {error && <Alert variant=\"danger\">{`Failed: ${error}`}</Alert>}\n               <Form onSubmit={handleSubmit}>\n                   <Form.Group id=\"email\">\n                       <Form.Label>Email</Form.Label>\n                       <Form.Control type=\"email\" ref={emailRef} required \n                       defaultValue={ currentUser.email } />\n                   </Form.Group>\n\n                   <Form.Group id=\"password\">\n                       <Form.Label>Password</Form.Label>\n                       <Form.Control type=\"password\" ref={passwordRef}  \n                       placeholder=\"Leave blank to keep the same\"/>\n                   </Form.Group>\n\n                   <Form.Group id=\"password-confirm\">\n                       <Form.Label>Password Confirmation</Form.Label>\n                       <Form.Control type=\"password-confirm\" ref={passwordConfirmRef}  \n                       placeholder=\"Leave blank to keep the same\" />\n                   </Form.Group>\n                   <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                       Update\n                   </Button>\n               </Form>\n           </Card.Body>\n\n           \n       </Card>   \n        \n        <div className=\"w-100 text-center mt-2\"> \n          <Link to='/'>Cancel</Link>            \n        </div>\n     </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}