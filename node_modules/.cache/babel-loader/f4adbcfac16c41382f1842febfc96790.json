{"ast":null,"code":"var _jsxFileName = \"/home/onewithclouds/react/firebase-react-auth/src/components/authentication/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport CenteredContainer from './CenteredContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const history = useHistory();\n  const {\n    currentUser,\n    updateEmail,\n    updatePassword,\n    setProfileUpdate,\n    profileUpdate\n  } = useAuth();\n  const [error, setError] = useState(''); //loading state controls the 'Sign Up' button and prevent adding mulitiple users to the database \n  //with muiltiple clicks on the button   \n\n  const [loading, setLoading] = useState(false); //not the greatest name for a function that pushes new current address to history object \n  //(redirects to page after action). the listener that it adds to the page is being unmounted by useEffect() \n  //to prevent memory leak\n\n  function unlisten(address) {\n    history.push(address);\n  }\n\n  useEffect(() => {\n    return unlisten;\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault(); // below checks if passwords match\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    } // a container for array of promises, e.g. for updating password and email \n\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\"); // if ( emailRef.current.value !== currentUser.email ) {\n    //     promises.push(updateEmail( emailRef.current.value ))\n    // }\n    // else if (emailRef.current.value === currentUser.email) {\n    //     promises.push(updateEmail( emailRef.current.value ))\n    // }\n\n    if (emailRef.current.value) {\n      promises.push(updateEmail(emailRef.current.value));\n      setProfileUpdate(true);\n      console.log(profileUpdate);\n    }\n\n    console.log(promises);\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    console.log(promises); // if ALL promises resolve in the array 'promises' declared, above => then udpate profile\n\n    Promise.all(promises).then(() => {\n      setLoading(false);\n      unlisten(\"/update-profile-success\");\n    }).catch(error => {\n      console.log(error);\n      console.log(`profile update state is ${profileUpdate}`); // setError(error)\n    }).finally(() => {\n      console.log('1');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CenteredContainer, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-4\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 16\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: `Failed: ${error}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                ref: emailRef,\n                required: true,\n                defaultValue: currentUser.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                ref: passwordRef,\n                placeholder: \"Leave blank to keep the same\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"password-confirm\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password Confirmation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password-confirm\",\n                ref: passwordConfirmRef,\n                placeholder: \"Leave blank to keep the same\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              className: \"w-100\",\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/user\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateProfile, \"SgkpdJ+8HBfNcAetaJ1CwPLC1+k=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/home/onewithclouds/react/firebase-react-auth/src/components/authentication/UpdateProfile.js"],"names":["React","useRef","useState","useEffect","Form","Button","Card","Alert","useAuth","Link","useHistory","CenteredContainer","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","history","currentUser","updateEmail","updatePassword","setProfileUpdate","profileUpdate","error","setError","loading","setLoading","unlisten","address","push","handleSubmit","e","preventDefault","current","value","promises","console","log","Promise","all","then","catch","finally","email"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { useAuth } from '../../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport CenteredContainer  from './CenteredContainer'\n\n\n\nexport default function UpdateProfile() {\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const history = useHistory()\n\n    const { currentUser, updateEmail, updatePassword, setProfileUpdate, profileUpdate } = useAuth()\n    \n    const [error, setError] = useState('')\n\n//loading state controls the 'Sign Up' button and prevent adding mulitiple users to the database \n//with muiltiple clicks on the button   \n    const [loading, setLoading] = useState(false)\n\n//not the greatest name for a function that pushes new current address to history object \n//(redirects to page after action). the listener that it adds to the page is being unmounted by useEffect() \n//to prevent memory leak\n    function unlisten (address) {\n        history.push(address)\n}\n\n    useEffect( () => {\n        return unlisten\n    }, [])\n    \n\n    function handleSubmit(e) {\n\n        e.preventDefault()\n\n// below checks if passwords match\n\n        if (passwordRef.current.value !==\n            passwordConfirmRef.current.value) {\n                return setError('Passwords do not match')\n            }\n\n// a container for array of promises, e.g. for updating password and email \n\n        const promises = []\n\n        setLoading(true)\n        setError(\"\")\n\n        // if ( emailRef.current.value !== currentUser.email ) {\n        //     promises.push(updateEmail( emailRef.current.value ))\n        // }\n        // else if (emailRef.current.value === currentUser.email) {\n        //     promises.push(updateEmail( emailRef.current.value ))\n        // }\n\n        if ( emailRef.current.value ) {\n            promises.push(updateEmail( emailRef.current.value ))\n            setProfileUpdate(true)\n            console.log(profileUpdate)           \n        }\n\n        console.log(promises)\n\n        if ( passwordRef.current.value ) {\n            promises.push(updatePassword( passwordRef.current.value ))\n        }\n        console.log(promises)\n\n// if ALL promises resolve in the array 'promises' declared, above => then udpate profile\n\n        Promise.all(promises).then( ()=> {\n            setLoading(false)\n            unlisten(\"/update-profile-success\")\n        }).catch( (error) => {\n            console.log(error)\n            console.log(`profile update state is ${profileUpdate}`)\n\n            // setError(error)\n        }).finally( ()=> {\n            console.log('1')\n            \n        })\n    }\n\n\n    return (\n     <>\n     <CenteredContainer>\n       <Card>\n           <Card.Body>\n               <h2 className=\"text-center mb-4\">Update Profile</h2>\n               {error && <Alert variant=\"danger\">{`Failed: ${error}`}</Alert>}\n               <Form onSubmit={handleSubmit}>\n                   <Form.Group id=\"email\">\n                       <Form.Label>Email</Form.Label>\n                       <Form.Control type=\"email\" ref={emailRef} required \n                       defaultValue={ currentUser.email } />\n                   </Form.Group>\n\n                   <Form.Group id=\"password\">\n                       <Form.Label>Password</Form.Label>\n                       <Form.Control type=\"password\" ref={passwordRef}  \n                       placeholder=\"Leave blank to keep the same\"/>\n                   </Form.Group>\n\n                   <Form.Group id=\"password-confirm\">\n                       <Form.Label>Password Confirmation</Form.Label>\n                       <Form.Control type=\"password-confirm\" ref={passwordConfirmRef}  \n                       placeholder=\"Leave blank to keep the same\" />\n                   </Form.Group>\n                   <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                       Update\n                   </Button>\n               </Form>\n           </Card.Body>        \n       </Card>\n    </CenteredContainer>   \n        \n        <div className=\"w-100 text-center mt-2\"> \n          <Link to='/user'>Cancel</Link>            \n        </div>\n     </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}